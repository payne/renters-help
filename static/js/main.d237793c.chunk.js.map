{"version":3,"sources":["components/steps/StepNames.js","components/steps/StepFunctions.js","components/FlexContainer.js","components/steps/StepButtons.js","components/steps/qualification/Start.js","components/Home.js","components/steps/qualification/IncomeQualifications.js","components/steps/qualification/GovernmentHelp.js","components/steps/qualification/AffordRent.js","components/steps/StepCounter.js","components/steps/qualification/UnsafeLivingConditions.js","components/steps/qualification/AttemptingToPay.js","components/steps/qualification/Qualified.js","components/steps/states.js","components/steps/letter-builder/PersonalInformation.js","components/steps/letter-builder/LandlordInfo.js","components/steps/letter-builder/PreviewLetter.js","components/steps/letter-builder/letterTemplate.js","components/steps/no-qualify/FailedQualification.js","components/FormContainer.js","i18n.js","translations/en.js","translations/es.js","components/App.js","reportWebVitals.js","index.js"],"names":["QualificationSteps","LetterBuilderSteps","previousStep","state","setState","currentStep","formNumber","FlexContainer","props","styles","display","flexWrap","wrap","flexDirection","backgroundColor","padding","margin","alignSelf","alignItems","justifyContent","style","children","defaultProps","flex","StepButtons","validate","nextText","disableNext","showPrevious","showNext","t","useTranslation","marginTop","Button","variant","marginRight","onClick","color","disabled","console","log","nextStep","useStyles","makeStyles","root","flexGrow","maxWidth","demo","Start","useEffect","ReactGA","classes","Fragment","Typography","className","List","ListItem","ListItemIcon","CheckCircleRounded","ListItemText","primary","boxColor","bigText","theme","breakpoints","down","fontSize","block","up","icon","createMuiTheme","palette","main","Home","i18n","textAlign","Box","pt","pb","pl","pr","Trans","i18nKey","borderRadius","textTransform","height","width","disableElevation","Link","component","href","process","language","noWrap","target","rel","IncomeQualifications","React","useState","noIncome","stimulusCheck","underIncomeThreshold","noneOfTheAbove","form","setForm","handleChange","event","name","checked","noneSelected","FormControl","formControl","FormGroup","FormControlLabel","control","Checkbox","onChange","label","errorStep","validateIncomeQualification","link","cursor","GovernmentHelp","selected","setSelected","showBestEffortsDef","setShowBestEffortsDef","RadioGroup","value","Radio","FormHelperText","AffordRent","lostSubstantialIncome","lostJob","hoursCut","salaryReduced","extraordinaryMedicalCost","none","showMedicalDef","setShowMedicalDef","rentReasons","StepCounter","identifier","finalStep","UnsafeLivingConditions","likelyBecomeHomeless","moveToShelter","moveToCloseQuarters","noOtherSafeChoices","otherChoicesMoreExpensive","notAtRisk","AttemptingToPay","Qualified","States","personalInformation","PersonalInformation","renterInfo","setRenterInfo","firstName","lastName","address","city","zip","errors","setErrors","e","id","fullWidth","TextField","error","required","unit","select","labelid","Object","values","map","st","MenuItem","companyInformation","LandlordInfo","landlordInfo","setLandlordInfo","setError","company","fullName","PreviewLetter","openSignForm","setOpenSignForm","imageUrl","setImageUrl","signaturePad","useRef","useTheme","fullScreen","useMediaQuery","letter","personalInfoBlock","StyleSheet","create","page","section","footnote","paddingTop","footnoteSeparator","paddingBottom","marginBottom","image","signature","marginLeft","date","size","src","Date","toLocaleDateString","getLetter","handleSignFormClose","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","ref","canvasProps","clearOnResize","DialogActions","current","clear","getTrimmedCanvas","toDataURL","fileName","textDecoration","document","FailedQualification","FormContainer","landlordCompany","landlordFullName","ThemeProvider","AppBar","position","Toolbar","verticalAlign","alt","mt","Container","Paper","elevation","p","m","resources","en","translation","checkAllThatApply","close","download","next","no","of","previous","qualification","save","signForm","step","yes","affordRentTitle","affordRentOptionLostSubstantialIncome","affordRentOptionLostJob","affordRentOptionHoursCut","affordRentOptionSalaryReduced","affordRentOptionExtraordinaryMedicalCost","affordRentExtraordinaryExplained","affordRentExtraordinaryQuestion","attemptingToPayTitle","douglasCountyCaresAct","failedQualificationTitle","failedQualificationBody","governmentHelpTitle","governmentHelpBody","governmentHelpBestEffortsQuestion","governmentHelpBestEffortsExplanation","homeAboutHeader","homeAboutInfo","homeContactLegalAid","homeInstruction1Title","homeInstruction1Info","homeInstruction2Title","homeInstruction2Info","homeInstruction3Title","homeInstruction3Info","homeLanguagePreference","homeOtherRentalAssistance","homePageTitle","homeReasonToUse","homeStartButton","incomeQualificationsTitle","incomeQualificationsOptionNoIncome","incomeQualificationsOptionStimulusCheck","incomeQualificationsOptionUnderIncomeThreshold","landlordInfoTitle","landlordInfoBody","legalAidOfNebraska","personalInformationTitle","personalInformationBody","personalInformationFirstName","personalInformationLastName","personalInformationAddress","personalInformationUnit","personalInformationCity","personalInformationState","personalInformationZip","previewTitle","previewBody","qualifiedTitle","qualifiedBodyAgreeingDescription","qualifiedBodyProtected","qualifiedBodyAgreeingStillResponsible","qualifiedBodyAgreeingPayInFullAfterDate","qualifiedBodyAgreeingTellTheTruth","qualifiedBodyConfirmUnderstanding","startTitle","startDescription","startFirstStep","startSecondStep","startThirdStep","unsafeLivingTitle","unsafeLivingOptionLikelyBecomeHomeless","unsafeLivingOptionMoveToShelter","unsafeLivingOptionMoveToCloseQuarters","unsafeLivingOptionNoOtherSafeChoices","unsafeLivingOptionOtherChoicesMoreExpensive","unsafeLivingOptionNotAtRisk","es","use","LanguageDetector","initReactI18next","init","keySeparator","interpolation","escapeValue","fallbackLng","detection","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupSessionStorage","lookupFromPathIndex","lookupFromSubdomainIndex","initialize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d237793c.chunk.js","sourcesContent":["export const QualificationSteps = {\n    START: 0,\n    INCOME_QUALIFICATIONS: 1,\n    GOVERNMENT_HELP: 2,\n    AFFORD_RENT: 3,\n    UNSAFE_LIVING_CONDITIONS: 4,\n    ATTEMPTING_TO_PAY: 5,\n    QUALIFIED: 6,\n    FINAL_STEP: 6\n}\n\nexport const LetterBuilderSteps = {\n    FIRST_STEP: 1,\n    PERSONAL_INFO: 1,\n    LANDLORD_INFO: 2,\n    PREVIEW_LETTER: 3,\n    SIGNATURE: 4,\n    DOWNLOAD_LETTER: 5,\n    FINAL_STEP: 3,\n}\n","import {LetterBuilderSteps, QualificationSteps} from \"./StepNames\";\n\nexport const nextStep = (state, setState, validate = () => true) => {\n    if (validate()) {\n        let {currentStep, formNumber} = state;\n        if (formNumber === 1 && currentStep === QualificationSteps.FINAL_STEP) {\n            formNumber = 2;\n            currentStep = 1;\n        } else {\n            currentStep = state.currentStep + 1;\n        }\n        console.log(`${currentStep}, ${formNumber}`)\n        setState({currentStep, formNumber});\n    }\n}\n\nexport const previousStep = (state, setState) => {\n    let {currentStep, formNumber} = state;\n    if (currentStep < 0) {\n        currentStep = -1 * currentStep;\n    } else if (formNumber === 2 && currentStep === LetterBuilderSteps.PERSONAL_INFO) {\n        formNumber = 1;\n        currentStep = QualificationSteps.FINAL_STEP;\n    } else if (!(formNumber === 1 && currentStep === QualificationSteps.START)) {\n        currentStep = currentStep - 1;\n    }\n    setState({currentStep, formNumber})\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function FlexContainer(props){\n  const styles = {\n    display: 'flex',\n    flexWrap: props.wrap ? 'wrap' : 'nowrap',\n    flexDirection: props.flexDirection,\n    backgroundColor: props.backgroundColor,\n    padding: props.padding,\n    margin: props.margin,\n    alignSelf: props.alignSelf,\n    alignItems: props.alignItems,\n    justifyContent: props.justifyContent,\n    ...props.styles\n  }\n  return (\n    <div style={styles}>\n      {props.children}\n    </div>\n  )\n}\n\nFlexContainer.propTypes = {\n  display: PropTypes.string,\n  wrap: PropTypes.bool,\n  children: PropTypes.node,\n  flexDirection: PropTypes.oneOf(['row', 'column']),\n  padding: PropTypes.number,\n  margin: PropTypes.number,\n  alignSelf: PropTypes.oneOf([\n    'auto',\n    'flex-start',\n    'flex-end',\n    'center',\n    'stretch',\n    'baseline',\n  ]),\n  alignItems: PropTypes.oneOf([\n    'flex-start',\n    'flex-end',\n    'center',\n    'stretch',\n    'baseline',\n  ]),\n  justifyContent: PropTypes.oneOf([\n    'flex-start',\n    'flex-end',\n    'center',\n    'space-between',\n    'space-around',\n    'baseline',\n  ]),\n}\n\nFlexContainer.defaultProps = {\n  wrap: false,\n  flexDirection: 'row',\n  alignSelf: 'stretch',\n  flex: 1,\n  padding: 0,\n  margin: 0,\n  alignItems: 'flex-start',\n  justifyContent: 'flex-start',\n  styles: null,\n  children: null,\n};\n\n","import Button from \"@material-ui/core/Button\";\nimport {nextStep, previousStep} from \"./StepFunctions\";\nimport FlexContainer from \"../FlexContainer\";\nimport React from \"react\";\nimport {useTranslation} from 'react-i18next';\n\nexport default function StepButtons({state, setState, validate = () => true, nextText, disableNext = false, showPrevious = true, showNext = true}) {\n    const {t} = useTranslation();\n\n    return (\n        <FlexContainer justifyContent={'center'} styles={{marginTop: '20px'}}>\n            {showPrevious && <Button variant='contained' style={{marginRight: '20px'}}\n                    onClick={() => previousStep(state, setState)}>{t('previous')}</Button>}\n            {showNext && <Button variant='contained' color='primary' disabled={disableNext}\n                    onClick={() => nextStep(state, setState, validate)}>{nextText || t('next')}</Button>}\n        </FlexContainer>\n    )\n}\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {CheckCircleRounded} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {QualificationSteps} from \"../StepNames\";\nimport StepButtons from \"../StepButtons\";\nimport * as ReactGA from \"react-ga\";\nimport {useTranslation} from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: 'white',\n    },\n}));\n\nexport default function Start({state, setState}) {\n    const {t} = useTranslation();\n    useEffect(() => ReactGA.pageview('Start step'), []);\n    const classes = useStyles();\n    if (state.currentStep !== QualificationSteps.START) {\n        return null\n    }\n    return (\n        <React.Fragment>\n            <Typography variant='h4' className='title'>{t('startTitle')}</Typography>\n            <Typography variant='body1'>{t('startDescription')}</Typography>\n            <div className={classes.demo}>\n                <List>\n                    <ListItem>\n                        <ListItemIcon><CheckCircleRounded/></ListItemIcon>\n                        <ListItemText primary={t('startFirstStep')}/>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon><CheckCircleRounded/></ListItemIcon>\n                        <ListItemText primary={t('startSecondStep')}/>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon><CheckCircleRounded/></ListItemIcon>\n                        <ListItemText primary={t('startThirdStep')}/>\n                    </ListItem>\n                </List>\n            </div>\n            <StepButtons state={state} setState={setState} showPrevious={false}/>\n        </React.Fragment>)\n}\n\nStart.propTypes = {\n    currentStep: PropTypes.number,\n}\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/styles\";\nimport Box from '@material-ui/core/Box';\nimport Button from \"@material-ui/core/Button\"\nimport Link from \"@material-ui/core/Link\"\nimport Typography from '@material-ui/core/Typography';\nimport {createMuiTheme} from \"@material-ui/core\";\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport EmailIcon from '@material-ui/icons/Email';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport * as ReactGA from \"react-ga\";\nimport { useTranslation, Trans } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    boxColor: {\n        backgroundColor: '#E9B5BD'\n    },\n    demo: {\n        backgroundColor: 'white',\n    },\n    bigText: {\n        [theme.breakpoints.down('lg')]: {\n            fontSize: '70px'\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '34px'\n        },\n    },\n    block: {\n        [theme.breakpoints.up('lg')]: {\n            padding: '32px',\n            display: 'inline-block'\n        },\n        [theme.breakpoints.up('md')]: {\n            padding: '16px',\n            display: 'inline-block'\n        }\n    },\n    icon: {\n        fontSize: '80px',\n        color: '#DC2A44'\n    }\n}));\n\nconst theme = createMuiTheme({palette: {primary: {main: '#DC2A44'}}})\n\nexport default function Home({state, setState}) {\n    const classes = useStyles();\n    const { t, i18n } = useTranslation();\n    useEffect(() => ReactGA.pageview('home'), []);\n    return (\n        <>\n            <div style={{textAlign: \"center\"}}>\n                <Box pt={6} pb={6} pl={[2, 4, 6, 24]} pr={[2, 4, 6, 24]} className={classes.boxColor}>\n                    <h1 className={classes.bigText}>\n                        <Trans i18nKey=\"homePageTitle\">\n                            Are you facing an <span style={{color: '#DC2A44'}}>eviction</span>? This tool can help.\n                        </Trans>\n                    </h1>\n                    <p>{t('homeReasonToUse')}</p>\n                    <Button style={{borderRadius: 15, textTransform: 'none', height: 50, width: 200}} color='primary'\n                            variant='contained' disableElevation\n                            onClick={() => {\n                                setState({...state, formNumber: 1})\n                            }}>\n                        {t('homeStartButton')}\n                    </Button>\n                    <Box pt={3}>\n                        <Link component={\"a\"} href={`${process.env.PUBLIC_URL}/?lng=${i18n.language === 'en' ? 'es': 'en'}`}>\n                            <Typography variant=\"h6\" component={\"span\"} noWrap>{t('homeLanguagePreference')}</Typography>\n                        </Link>\n                    </Box>\n                </Box>\n                <Box>\n                    <div className={classes.block}>\n                        <ListAltIcon className={classes.icon}/>\n                        <h3>\n                            <Trans i18nKey=\"homeInstruction1Title\">\n                                Fill out the form in 5 minutes\n                            </Trans>\n                        </h3>\n                        <p>\n                            <Trans i18nKey=\"homeInstruction1Info\">\n                                Answer a few questions and provide your<br/>landlord's contact information\n                            </Trans>\n                        </p>\n                    </div>\n                    <div className={classes.block}>\n                        <DescriptionIcon className={classes.icon}/>\n                        <h3>\n                            <Trans i18nKey=\"homeInstruction2Title\">\n                                The tool will create a letter\n                            </Trans>\n                        </h3>\n                        <p>\n                            <Trans i18nKey=\"homeInstruction2Info\">\n                                The app will create a letter that is ready<br/>to send based on your answers\n                            </Trans>\n                        </p>\n                    </div>\n                    <div className={classes.block}>\n                        <EmailIcon className={classes.icon}/>\n                        <h3>\n                            <Trans i18nKey=\"homeInstruction3Title\">\n                                Send the letter to your landlord\n                            </Trans>\n                        </h3>\n                        <p>\n                            <Trans i18nKey=\"homeInstruction3Info\">\n                                Download or print the letter to<br/>send to your landlord\n                            </Trans>\n                        </p>\n                    </div>\n                </Box>\n                <Box pt={2} pb={2} pl={[4, 8, 16, 40]} pr={[4, 8, 16, 40]}>\n                    <h2>\n                        {t('homeAboutHeader')}\n                    </h2>\n                    <p>\n                        {t('homeAboutInfo')}\n                    </p>\n                </Box>\n                <Box pt={2} pb={2} pl={[4, 8, 16, 40]} pr={[4, 8, 16, 40]}>\n                    <h2>\n                        {t('homeOtherRentalAssistance')}\n                    </h2>\n                    <p>\n                        <Trans i18nKey=\"homeContactLegalAid\">\n                            Please call <Link color=\"primary\" href=\"https://www.legalaidofnebraska.org/how-we-help/resources/covid-19-coronavirus/housingcorona/tenants/\"\n                                              target=\"_blank\" rel=\"nofollow\">Legal Aid</Link> toll-free at 1-844-268-5627\n                        </Trans>\n                    </p>\n                    {/*<p><Link color=\"primary\" href=\"https://www.douglascounty-ne.gov/coronovirus-relief-fund-information\"*/}\n                    {/*target=\"_blank\" rel=\"nofollow\">{t('douglasCountyCaresAct')}</Link></p>*/}\n                </Box>\n                <Box pt={2}>\n                    <footer>\n                        <p><Link color=\"primary\" href=\"https://codefornebraska.org/\" target=\"_blank\" rel=\"nofollow\">2020\n                            Code for Nebraska</Link></p>\n                    </footer>\n                </Box>\n            </div>\n        </>\n    );\n}\n\nHome.propTypes = {\n    formNumber: PropTypes.number,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {QualificationSteps} from \"../StepNames\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport StepButtons from \"../StepButtons\";\nimport {useTranslation} from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: 'white',\n    },\n}));\n\nconst validateIncomeQualification = (form, state, setState) => {\n    const {noIncome, stimulusCheck, underIncomeThreshold} = form;\n    if (noIncome || stimulusCheck || underIncomeThreshold) {\n        return true\n    } else {\n        const errorStep = state.currentStep * -1;\n        setState({...state, currentStep: errorStep})\n    }\n}\n\nexport default function IncomeQualifications({state, setState}) {\n    const {t} = useTranslation();\n\n    const classes = useStyles();\n    const [form, setForm] = React.useState({\n        noIncome: false,\n        stimulusCheck: false,\n        underIncomeThreshold: false,\n        noneOfTheAbove: false,\n    })\n\n    const handleChange = (event) => {\n        const {name, checked} = event.target;\n        if ('noneOfTheAbove' === name) {\n            setForm({\n                noIncome: false,\n                stimulusCheck: false,\n                underIncomeThreshold: false,\n                noneOfTheAbove: checked,\n            })\n        } else {\n            setForm({...form, noneOfTheAbove: false, [name]: checked})\n        }\n    }\n\n    const {noIncome, stimulusCheck, underIncomeThreshold, noneOfTheAbove} = form;\n    const noneSelected = !(noIncome || stimulusCheck || underIncomeThreshold || noneOfTheAbove);\n\n    if (state.currentStep !== QualificationSteps.INCOME_QUALIFICATIONS) {\n        return null\n    }\n    return (<>\n        <Typography variant='h4' component='h1' className='title'>{t('incomeQualificationsTitle')}</Typography>\n        <Typography variant='body1'>{t('checkAllThatApply')}</Typography>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormGroup>\n                <FormControlLabel\n                    control={<Checkbox checked={noIncome} onChange={handleChange} name=\"noIncome\" color='primary'/>}\n                    label={t('incomeQualificationsOptionNoIncome')}\n                />\n                <FormControlLabel\n                    control={<Checkbox checked={stimulusCheck} onChange={handleChange}\n                                       name=\"stimulusCheck\" color='primary'/>}\n                    label={t('incomeQualificationsOptionStimulusCheck')}\n                />\n                <FormControlLabel\n                    control={<Checkbox checked={underIncomeThreshold} onChange={handleChange}\n                                       name=\"underIncomeThreshold\" color='primary'/>}\n                    label={t('incomeQualificationsOptionUnderIncomeThreshold')}\n                />\n                <FormControlLabel\n                    control={<Checkbox checked={noneOfTheAbove} onChange={handleChange}\n                                       name=\"noneOfTheAbove\" color='primary' />}\n                    label={t('noneOfTheAbove')}\n                />\n            </FormGroup>\n        </FormControl>\n        <StepButtons state={state} setState={setState}\n                     validate={() => validateIncomeQualification(form, state, setState)} disableNext={noneSelected}/>\n    </>)\n}\n\nIncomeQualifications.propTypes = {\n    state: PropTypes.shape({currentStep: PropTypes.number, formNumber: PropTypes.number}),\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {QualificationSteps} from \"../StepNames\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport {Link} from \"@material-ui/core\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport StepButtons from \"../StepButtons\";\nimport {useTranslation} from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: 'white',\n    },\n    link: {\n        cursor: 'pointer'\n    }\n}));\n\nconst validate = (selected, state, setState) => {\n    if (selected === 'Yes') {\n        return true\n    } else {\n        const errorStep = state.currentStep * -1;\n        setState({...state, currentStep: errorStep});\n    }\n}\n\nexport default function GovernmentHelp({state, setState}) {\n    const {t} = useTranslation();\n\n    const classes = useStyles();\n    const [selected, setSelected] = React.useState('none')\n    const [showBestEffortsDef, setShowBestEffortsDef] = React.useState(false);\n\n    const handleChange = (event) => {\n        setSelected(event.target.value)\n    }\n\n    if (state.currentStep !== QualificationSteps.GOVERNMENT_HELP) {\n        return null\n    }\n    return (<React.Fragment>\n        <Typography variant='h4' component='h1' className='title'>{t('governmentHelpTitle')}</Typography>\n        <Typography variant='body1'>{t('governmentHelpTitle')}</Typography>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n            <RadioGroup value={selected} onChange={handleChange}>\n                <FormControlLabel value=\"Yes\" control={<Radio color='primary'/>} label={t('yes')}/>\n                <FormControlLabel value=\"No\" control={<Radio color='primary'/>} label={t('no')}/>\n            </RadioGroup>\n            <Link className={classes.link} onClick={() => {setShowBestEffortsDef(!showBestEffortsDef)}} color=\"primary\" style={{textAlign: 'left'}}>{t('governmentHelpBestEffortsQuestion')}</Link>\n            {showBestEffortsDef && <FormHelperText>{t('governmentHelpBestEffortsExplanation')}</FormHelperText>}\n        </FormControl>\n        <StepButtons state={state} setState={setState} validate={() => validate(selected, state, setState)} disableNext={'none' === selected}/>\n    </React.Fragment>)\n}\n\nGovernmentHelp.propTypes = {\n    currentStep: PropTypes.number,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormHelperText, Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {QualificationSteps} from \"../StepNames\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport StepButtons from \"../StepButtons\";\nimport {useTranslation} from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: 'white',\n    },\n    link: {\n        cursor: 'pointer'\n    }\n}));\n\nconst validate = (form, state, setState) => {\n    const {selected, lostSubstantialIncome, lostJob, hoursCut, salaryReduced, extraordinaryMedicalCost, none} = form;\n    if (selected === 'No' && (lostSubstantialIncome || lostJob || hoursCut || salaryReduced || extraordinaryMedicalCost || !none)) {\n        return true\n    } else {\n        const errorStep = state.currentStep * -1;\n        setState({...state, currentStep: errorStep});\n    }\n}\n\nexport default function AffordRent({state, setState}) {\n    const {t} = useTranslation();\n    const classes = useStyles();\n    const [form, setForm] = React.useState({\n        selected: 'none',\n        lostSubstantialIncome: false,\n        lostJob: false,\n        hoursCut: false,\n        salaryReduced: false,\n        extraordinaryMedicalCost: false,\n        none: false\n    })\n    const [showMedicalDef, setShowMedicalDef] = React.useState(false)\n\n\n    const handleChange = (event) => {\n        const {name, checked} = event.target;\n        if ('none' === name) {\n            setForm({\n                ...form,\n                lostSubstantialIncome: false,\n                lostJob: false,\n                hoursCut: false,\n                salaryReduced: false,\n                extraordinaryMedicalCost: false,\n                none: checked\n            })\n        } else {\n            setForm({...form, none: false, [name]: checked})\n        }\n    }\n\n    const handleSelectedChange = (event) => {\n        setForm({...form, selected: event.target.value})\n    }\n\n    const {selected, lostSubstantialIncome, lostJob, hoursCut, salaryReduced, extraordinaryMedicalCost, none} = form;\n    const disabled = !('Yes' === selected ||\n        ('No' === selected && (lostSubstantialIncome || lostJob || hoursCut || salaryReduced || extraordinaryMedicalCost || none)))\n\n    if (state.currentStep !== QualificationSteps.AFFORD_RENT) {\n        return null\n    }\n\n    const rentReasons = (<FormGroup>\n        <Typography variant='body1'>{t('checkAllThatApply')}</Typography>\n        <FormControlLabel\n            control={<Checkbox checked={lostSubstantialIncome} onChange={handleChange}\n                               name=\"lostSubstantialIncome\" color='primary'/>}\n            label={t('affordRentOptionLostSubstantialIncome')}\n        />\n        <FormControlLabel\n            control={<Checkbox checked={lostJob} onChange={handleChange}\n                               name=\"lostJob\" color='primary'/>}\n            label={t('affordRentOptionLostJob')}\n        />\n        <FormControlLabel\n            control={<Checkbox checked={hoursCut} onChange={handleChange} name=\"hoursCut\" color='primary'/>}\n            label={t('affordRentOptionHoursCut')}\n        />\n        <FormControlLabel\n            control={<Checkbox checked={salaryReduced} onChange={handleChange}\n                               name=\"salaryReduced\" color='primary'/>}\n            label={t('affordRentOptionSalaryReduced')}\n        />\n        <FormControlLabel\n            control={<Checkbox checked={extraordinaryMedicalCost} onChange={handleChange}\n                               name=\"extraordinaryMedicalCost\" color='primary'/>}\n            label={t('affordRentOptionExtraordinaryMedicalCost')}\n        />\n        <FormControlLabel\n            control={<Checkbox checked={none} onChange={handleChange} name=\"none\" color='primary'/>}\n            label={t('noneOfTheAbove')}\n        />\n        <Link className={classes.link} onClick={() => {\n            setShowMedicalDef(!showMedicalDef);\n        }} color=\"primary\" style={{textAlign: 'left'}}>{t('affordRentExtraordinaryQuestion')}</Link>\n        {showMedicalDef &&\n        <FormHelperText>{t('affordRentExtraordinaryExplained')}</FormHelperText>}\n    </FormGroup>)\n\n    return (<React.Fragment>\n        <Typography variant='h4' component='h1' className='title'>{t('affordRentTitle')}</Typography>\n        <FormControl component=\"fieldset\">\n            <RadioGroup value={selected} onChange={handleSelectedChange}>\n                <FormControlLabel value=\"Yes\" control={<Radio color='primary'/>} label={t('yes')}/>\n                <FormControlLabel value=\"No\" control={<Radio color='primary'/>} label={t('no')}/>\n            </RadioGroup>\n            {'No' === selected && rentReasons}\n        </FormControl>\n        <StepButtons state={state} setState={setState} validate={() => validate(form, state, setState)}\n                     disableNext={disabled}/>\n    </React.Fragment>)\n}\n\nAffordRent.propTypes = {\n    currentStep: PropTypes.number,\n}\n","import React from 'react';\nimport {QualificationSteps, LetterBuilderSteps} from \"./StepNames\";\nimport { useTranslation } from 'react-i18next';\n\nexport default function StepCounter({formNumber, currentStep}) {\n    const {t} = useTranslation();\n    if(currentStep === QualificationSteps.START || currentStep >= QualificationSteps.QUALIFIED || currentStep < 0) {\n        return null;\n    }\n\n    const identifier = formNumber === 1? t('qualification') : t('step');\n    const finalStep = formNumber === 1? '5': LetterBuilderSteps.FINAL_STEP;\n    return <p style={{textAlign: 'center'}}>{identifier} {currentStep} {t('of')} {finalStep}</p>\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {QualificationSteps} from \"../StepNames\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport StepButtons from \"../StepButtons\";\nimport {useTranslation} from \"react-i18next\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: 'white',\n    },\n}));\n\nconst validate = (form, state, setState) => {\n    const {likelyBecomeHomeless, moveToShelter, moveToCloseQuarters, noOtherSafeChoices, otherChoicesMoreExpensive } = form;\n    if ( likelyBecomeHomeless || moveToShelter || moveToCloseQuarters || noOtherSafeChoices || otherChoicesMoreExpensive ) {\n        return true;\n    } else {\n        const errorStep = state.currentStep * -1;\n        setState({...state, currentStep: errorStep});\n    }\n}\n\nexport default function UnsafeLivingConditions({state, setState}) {\n    const {t} = useTranslation();\n    const classes = useStyles();\n    const [form, setForm] = React.useState({\n        likelyBecomeHomeless: false,\n        moveToShelter: false,\n        moveToCloseQuarters: false,\n        noOtherSafeChoices: false,\n        otherChoicesMoreExpensive: false,\n        notAtRisk: false,\n    })\n\n    const handleChange = (event) => {\n        const {name, checked} = event.target;\n        if ('notAtRisk' === name) {\n            setForm({\n                likelyBecomeHomeless: false,\n                moveToShelter: false,\n                moveToCloseQuarters: false,\n                noOtherSafeChoices: false,\n                otherChoicesMoreExpensive: false,\n                notAtRisk: checked,\n            })\n        } else {\n            setForm({...form, notAtRisk: false, [name]: checked})\n        }\n    }\n\n    const {likelyBecomeHomeless, moveToShelter, moveToCloseQuarters, noOtherSafeChoices, otherChoicesMoreExpensive, notAtRisk} = form;\n    const disabled = !(likelyBecomeHomeless || moveToShelter || moveToCloseQuarters || noOtherSafeChoices || otherChoicesMoreExpensive || notAtRisk)\n\n    if (state.currentStep !== QualificationSteps.UNSAFE_LIVING_CONDITIONS) {\n        return null\n    }\n    return (<React.Fragment>\n        <Typography variant='h4' component='h1' className='title'>{t('unsafeLivingTitle')}</Typography>\n        <Typography variant='body1'>{t('checkAllThatApply')}</Typography>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormGroup>\n                <FormControlLabel\n                    control={<Checkbox checked={likelyBecomeHomeless} onChange={handleChange}\n                                       name=\"likelyBecomeHomeless\" color='primary'/>}\n                    label={t('unsafeLivingOptionLikelyBecomeHomeless')}\n                />\n                <FormControlLabel\n                    control={<Checkbox checked={moveToShelter} onChange={handleChange}\n                                       name=\"moveToShelter\" color='primary'/>}\n                    label={t('unsafeLivingOptionMoveToShelter')}\n                />\n                <FormControlLabel\n                    control={<Checkbox checked={moveToCloseQuarters} onChange={handleChange}\n                                       name=\"moveToCloseQuarters\" color='primary' />}\n                    label={t('unsafeLivingOptionMoveToCloseQuarters')}\n                />\n                <FormControlLabel\n                    control={<Checkbox checked={noOtherSafeChoices} onChange={handleChange}\n                                       name=\"noOtherSafeChoices\" color='primary' />}\n                    label={t('unsafeLivingOptionNoOtherSafeChoices')}\n                />\n                <FormControlLabel\n                    control={<Checkbox checked={otherChoicesMoreExpensive} onChange={handleChange}\n                                       name=\"otherChoicesMoreExpensive\" color='primary' />}\n                    label={t('unsafeLivingOptionOtherChoicesMoreExpensive')}\n                />\n                <FormControlLabel\n                    control={<Checkbox checked={notAtRisk} onChange={handleChange}\n                                       name=\"notAtRisk\" color='primary'/>}\n                    label={t('unsafeLivingOptionNotAtRisk')}\n                />\n            </FormGroup>\n        </FormControl>\n        <StepButtons state={state} setState={setState} disableNext={disabled} validate={() => validate(form, state, setState)}/>\n    </React.Fragment>)\n}\n\nUnsafeLivingConditions.propTypes = {\n    currentStep: PropTypes.number,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {QualificationSteps} from \"../StepNames\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport StepButtons from \"../StepButtons\";\nimport {useTranslation} from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    }\n}));\n\nconst validate = (selected, state, setState) => {\n    if (selected === 'Yes') {\n        return true\n    } else {\n        const errorStep = state.currentStep * -1;\n        setState({...state, currentStep: errorStep});\n    }\n}\n\nexport default function AttemptingToPay({state, setState}) {\n    const {t} = useTranslation();\n\n    const classes = useStyles();\n    const [selected, setSelected] = React.useState('none')\n\n    const handleChange = (event) => {\n        setSelected(event.target.value)\n    }\n    if (state.currentStep !== QualificationSteps.ATTEMPTING_TO_PAY) {\n        return null\n    }\n\n    return (<React.Fragment>\n        <Typography variant='h4' component='h1' className='title'>{t('attemptingToPayTitle')}</Typography>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n            <RadioGroup value={selected} onChange={handleChange}>\n                <FormControlLabel value=\"Yes\" control={<Radio color='primary'/>} label={t('yes')}/>\n                <FormControlLabel value=\"No\" control={<Radio color='primary'/>} label={t('no')}/>\n            </RadioGroup>\n        </FormControl>\n        <StepButtons state={state} setState={setState} validate={() => validate(selected, state, setState)}\n                     disableNext={'none' === selected}/>\n    </React.Fragment>)\n}\n\nAttemptingToPay.propTypes = {\n    currentStep: PropTypes.number,\n}\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {CheckCircleRounded} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {QualificationSteps} from \"../StepNames\";\nimport StepButtons from \"../StepButtons\";\nimport * as ReactGA from \"react-ga\";\nimport {useTranslation} from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: 'white',\n    },\n}));\n\nexport default function Qualified({state, setState}) {\n    const {t} = useTranslation();\n\n    useEffect(() => ReactGA.pageview('qualified'), []);\n    const classes = useStyles();\n\n        if (state.currentStep !== QualificationSteps.QUALIFIED) {\n            return null\n        }\n        return (<>\n            <Typography variant='h4' component='h1' className='title'>{t('qualifiedTitle')}</Typography>\n            <Typography variant='body1'>{t('qualifiedBodyAgreeingDescription')}</Typography>\n            <Typography variant='body1'>{t('qualifiedBodyProtected')}</Typography>\n            <div className={classes.demo}>\n                <List>\n                    <ListItem>\n                        <ListItemIcon><CheckCircleRounded/></ListItemIcon>\n                        <ListItemText primary={t('qualifiedBodyAgreeingStillResponsible')}/>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon><CheckCircleRounded/></ListItemIcon>\n                        <ListItemText primary={t('qualifiedBodyAgreeingPayInFullAfterDate')}/>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon><CheckCircleRounded/></ListItemIcon>\n                        <ListItemText primary={t('qualifiedBodyAgreeingTellTheTruth')}/>\n                    </ListItem>\n                </List>\n            </div>\n            <StepButtons state={state} setState={setState} nextText={t('qualifiedBodyConfirmUnderstanding')}/>\n        </>)\n}\n\nQualified.propTypes = {\n    currentStep: PropTypes.number,\n}\n","export const States = {  \"AL\": \"Alabama\",\n    \"AK\": \"Alaska\",\n    \"AS\": \"American Samoa\",\n    \"AZ\": \"Arizona\",\n    \"AR\": \"Arkansas\",\n    \"CA\": \"California\",\n    \"CO\": \"Colorado\",\n    \"CT\": \"Connecticut\",\n    \"DE\": \"Delaware\",\n    \"DC\": \"District Of Columbia\",\n    \"FM\": \"Federated States Of Micronesia\",\n    \"FL\": \"Florida\",\n    \"GA\": \"Georgia\",\n    \"GU\": \"Guam\",\n    \"HI\": \"Hawaii\",\n    \"ID\": \"Idaho\",\n    \"IL\": \"Illinois\",\n    \"IN\": \"Indiana\",\n    \"IA\": \"Iowa\",\n    \"KS\": \"Kansas\",\n    \"KY\": \"Kentucky\",\n    \"LA\": \"Louisiana\",\n    \"ME\": \"Maine\",\n    \"MH\": \"Marshall Islands\",\n    \"MD\": \"Maryland\",\n    \"MA\": \"Massachusetts\",\n    \"MI\": \"Michigan\",\n    \"MN\": \"Minnesota\",\n    \"MS\": \"Mississippi\",\n    \"MO\": \"Missouri\",\n    \"MT\": \"Montana\",\n    \"NE\": \"Nebraska\",\n    \"NV\": \"Nevada\",\n    \"NH\": \"New Hampshire\",\n    \"NJ\": \"New Jersey\",\n    \"NM\": \"New Mexico\",\n    \"NY\": \"New York\",\n    \"NC\": \"North Carolina\",\n    \"ND\": \"North Dakota\",\n    \"MP\": \"Northern Mariana Islands\",\n    \"OH\": \"Ohio\",\n    \"OK\": \"Oklahoma\",\n    \"OR\": \"Oregon\",\n    \"PW\": \"Palau\",\n    \"PA\": \"Pennsylvania\",\n    \"PR\": \"Puerto Rico\",\n    \"RI\": \"Rhode Island\",\n    \"SC\": \"South Carolina\",\n    \"SD\": \"South Dakota\",\n    \"TN\": \"Tennessee\",\n    \"TX\": \"Texas\",\n    \"UT\": \"Utah\",\n    \"VT\": \"Vermont\",\n    \"VI\": \"Virgin Islands\",\n    \"VA\": \"Virginia\",\n    \"WA\": \"Washington\",\n    \"WV\": \"West Virginia\",\n    \"WI\": \"Wisconsin\",\n    \"WY\": \"Wyoming\"\n}\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {LetterBuilderSteps} from \"../StepNames\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {States} from \"../states\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FlexContainer from \"../../FlexContainer\";\nimport StepButtons from \"../StepButtons\";\nimport {FormControl} from \"@material-ui/core\";\nimport { Trans, useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  personalInformation: {\n    margin: 4,\n  }\n}));\n\nconst validate = (renterInfo, setErrors) => {\n  const {firstName, lastName, address, city, state, zip} = renterInfo;\n  if (firstName && lastName && address && city && state && zip) {\n    return true;\n  } else {\n    setErrors({\n      firstName: firstName === '',\n      lastName: lastName === '',\n      address: address === '',\n      city: city === '',\n      state: state === '',\n      zip: zip === ''\n    });\n  }\n}\n\nexport default function PersonalInformation({state, setState, renterInfo, setRenterInfo}) {\n\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [errors, setErrors] = useState({\n    firstName: false,\n    lastName: false,\n    address: false,\n    city: false,\n    state: false,\n    zip: false\n  });\n\n  const handleChange = (e) => {\n    const {id, value} = e.target;\n    setRenterInfo({...renterInfo, [id]: value})\n  }\n\n  const handleStateChange = (e) => {\n    setRenterInfo({...renterInfo, state: e.target.value})\n  }\n\n  if (state.currentStep !== LetterBuilderSteps.PERSONAL_INFO) {\n    return null\n  }\n\n  return (\n      <>\n        <Typography variant='h4' component='h1' className='title'>\n          <Trans i18nKey=\"personalInformationTitle\">\n            Enter your information\n          </Trans>\n        </Typography>\n        <Typography variant='body1'>\n          <Trans i18nKey=\"personalInformationBody\">\n            We need this information to complete a cover letter to your landlord as well as to ensure that you qualify to use this self-help tool.\n          </Trans>\n        </Typography>\n        <FormControl margin={'dense'} fullWidth>\n          <FlexContainer>\n            <TextField fullWidth className={classes.personalInformation} id=\"firstName\" label={t('personalInformationFirstName')} value={renterInfo.firstName} onChange={handleChange} variant=\"outlined\" error={errors.firstName} required/>\n            <TextField fullWidth className={classes.personalInformation} id=\"lastName\" label={t('personalInformationLastName')} value={renterInfo.lastName} onChange={handleChange} variant=\"outlined\" error={errors.lastName} required/>\n          </FlexContainer>\n\n          <FlexContainer>\n            <TextField fullWidth className={classes.personalInformation} id=\"address\" label={t('personalInformationAddress')} value={renterInfo.address} onChange={handleChange} variant=\"outlined\" error={errors.address} required/>\n            <TextField className={classes.personalInformation} id=\"unit\" label={t('personalInformationUnit')} value={renterInfo.unit} onChange={handleChange} variant=\"outlined\"/>\n          </FlexContainer>\n\n          <FlexContainer>\n            <TextField fullWidth className={classes.personalInformation} id=\"city\" label={t('personalInformationCity')} value={renterInfo.city} onChange={handleChange} variant=\"outlined\" error={errors.city} required/>\n            <TextField select fullWidth variant={'outlined'} className={classes.personalInformation} labelid=\"state-select\" id=\"state\" value={renterInfo.state} onChange={handleStateChange} error={errors.state} required>\n              {Object.values(States).map((st) => <MenuItem key={st} id=\"state\" value={st}>{st}</MenuItem>)}\n            </TextField>\n            <TextField fullWidth className={classes.personalInformation} id=\"zip\" label={t('personalInformationZip')} value={renterInfo.zip} onChange={handleChange} variant=\"outlined\" error={errors.zip} required/>\n          </FlexContainer>\n        </FormControl>\n        <StepButtons state={state} setState={setState} validate={() => validate(renterInfo, setErrors)}/>\n      </>\n  )\n}\n\nPersonalInformation.propTypes = {\n  currentStep: PropTypes.number,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {QualificationSteps} from \"../StepNames\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport StepButtons from \"../StepButtons\";\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  companyInformation: {\n    margin: 4,\n  }\n}));\n\nconst validate = (landlordInfo, setError) => {\n  if (landlordInfo.fullName) {\n    setError(false);\n    return true;\n  } else {\n    setError(true);\n  }\n}\n\nexport default function LandlordInfo({state, setState, landlordInfo, setLandlordInfo}) {\n  const {t} = useTranslation();\n  const classes = useStyles();\n\n  const [error, setError] = React.useState(false);\n\n  const handleChange = (event) => {\n    setLandlordInfo({...landlordInfo, [event.target.id]: event.target.value})\n  }\n\n  if (state.currentStep !== QualificationSteps.GOVERNMENT_HELP) {\n    return null\n  }\n\n  const {company, fullName} = landlordInfo;\n  return (\n      <>\n        <Typography variant='h4' component='h1' className='title'>\n            {t('landlordInfoTitle')}\n        </Typography>\n        <Typography variant='body1'>\n            {t('landlordInfoBody')}\n        </Typography>\n        <FormControl margin={'dense'} fullWidth>\n          <TextField fullWidth className={classes.companyInformation} id=\"company\" label={t('landlordCompany')} value={company} onChange={handleChange} variant={\"outlined\"}/>\n          <TextField fullWidth className={classes.companyInformation} id=\"fullName\" label={t('landlordFullName')} required error={error} value={fullName} onChange={handleChange} variant={\"outlined\"}/>\n        </FormControl>\n        <StepButtons state={state} setState={setState} validate={() => validate(landlordInfo, setError)}/>\n      </>\n  )\n}\n\nLandlordInfo.propTypes = {\n  currentStep: PropTypes.number,\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport {LetterBuilderSteps} from \"../StepNames\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport {previousStep} from \"../StepFunctions\";\nimport {getLetter} from \"./letterTemplate\";\nimport FlexContainer from \"../../FlexContainer\";\nimport {PDFDownloadLink, PDFViewer} from \"@react-pdf/renderer\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SignaturePad from 'react-signature-canvas'\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {useTheme} from '@material-ui/core/styles';\nimport \"./signature.css\";\nimport * as ReactGA from \"react-ga\";\nimport { useTranslation } from 'react-i18next';\n\nexport default function PreviewLetter({state, setState, renterInfo, landlordInfo}) {\n    const {t} = useTranslation();\n    useEffect(() => ReactGA.pageview('preview/download letter page'), []);\n    const [openSignForm, setOpenSignForm] = useState(false);\n    const [imageUrl, setImageUrl] = useState(\"/renters-help/transparent.png\");\n    const signaturePad = useRef({});\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n\n    if (state.currentStep !== LetterBuilderSteps.PREVIEW_LETTER) {\n        return null\n    }\n\n    const letter = getLetter(renterInfo, landlordInfo, imageUrl);\n\n    const handleSignFormOpen = () => {\n        setOpenSignForm(true);\n    }\n\n    const handleSignFormClose = () => {\n        setOpenSignForm(false);\n    }\n\n    const handleSignFormClear = () => {\n        signaturePad.current.clear();\n    }\n\n    const handleSignFormSave = () => {\n        setImageUrl(signaturePad.current.getTrimmedCanvas().toDataURL(\"image/png\"));\n        setOpenSignForm(false);\n    }\n\n    return (\n        <>\n            <Dialog open={openSignForm} onClose={handleSignFormClose} maxWidth={'md'} fullScreen={fullScreen} aria-labelledby={t('signForm')}>\n                <DialogTitle>{t('signForm')}</DialogTitle>\n                <DialogContent>\n                    <FlexContainer justifyContent={'center'}>\n                        <SignaturePad ref={signaturePad} canvasProps={{className: \"signatureCanvas\"}}\n                                      clearOnResize={false}/>\n                    </FlexContainer>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleSignFormClose} variant='contained'>{t('close')}</Button>\n                    <Button onClick={handleSignFormClear} variant='contained'>{t('clear')}</Button>\n                    <Button onClick={handleSignFormSave} variant='contained' color={'primary'}>{t('save')}</Button>\n                </DialogActions>\n            </Dialog>\n\n            <Typography variant='h4' component='h1' className='title'>\n                {t('previewTitle')}\n            </Typography>\n            <Typography variant='body1'>\n                {t('previewBody')}\n            </Typography>\n            <FormControl fullWidth>\n                <PDFViewer height={600} fileName={`${renterInfo.lastName}_${renterInfo.firstName}_Protected_Notification.pdf`}>\n                    {letter}\n                </PDFViewer>\n            </FormControl>\n            <FlexContainer justifyContent={'center'} margin={10}>\n                <Button variant='contained' style={{marginRight: '20px'}}\n                        onClick={() => previousStep(state, setState)}>{t('previous')}</Button>\n                <Button variant='contained' onClick={handleSignFormOpen}>{t('signForm')}</Button>\n            </FlexContainer>\n            <FlexContainer justifyContent={'center'} margin={10}>\n                <PDFDownloadLink style={{textDecoration: 'none'}} document={letter}\n                                 fileName={`${renterInfo.lastName}_${renterInfo.firstName}_Protected_Notification.pdf`}>\n                    <Button variant='contained' color='primary' onClick={() => ReactGA.modalview('letter download button clicked')}>\n                        {t('download')}\n                    </Button>\n                </PDFDownloadLink>\n            </FlexContainer>\n        </>\n    )\n}\n\nPreviewLetter.propTypes = {\n    currentStep: PropTypes.number,\n}\n","import {Document, Image, Page, StyleSheet, Text, View} from \"@react-pdf/renderer\";\nimport React from \"react\";\n\nexport const getLetter = (renterInfo, landlordInfo, imageUrl) => {\n  const {firstName, lastName, address, unit, city, state, zip} = renterInfo;\n  const personalInfoBlock = `${firstName} ${lastName}\n    ${address} ${unit}\n    ${city}, ${state} ${zip}`;\n\n  const styles = StyleSheet.create({\n    page: {\n      flexDirection: 'column',\n      backgroundColor: 'white',\n      padding: 15\n    },\n    section: {\n      fontSize: 12,\n      margin: 6,\n      padding: 6,\n      flexGrow: 1\n    },\n    footnote: {\n      fontSize: 10,\n      margin: 6,\n      padding: 6,\n      marginTop: 0,\n      paddingTop: 0,\n      flexGrow: 1\n    },\n    footnoteSeparator: {\n      fontSize: 10,\n      paddingTop: 0,\n      paddingBottom: 0,\n      marginTop: 0,\n      marginBottom: 0,\n      padding: 6,\n      margin: 6,\n      flexGrow: 1\n    },\n    image: {\n      width: '100%'\n    },\n    signature: {\n      marginTop: -420,\n      marginLeft: 55,\n      maxWidth: 30,\n    },\n    date: {\n      marginTop: -15,\n      marginLeft: 370,\n      fontSize: 14,\n    }\n  });\n  const {fullName, company} = landlordInfo;\n  return (\n      <Document>\n        <Page size=\"Letter\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>\n              {personalInfoBlock}\n            </Text>\n          </View>\n          <View style={styles.section}>\n            <Text>{fullName}</Text>\n            <Text>{company}</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Dear {fullName}:</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>\n              I am writing you to express my right to not be evicted through December 31, 2020 because I am\n              unable to pay my rent due to the COVID-19 pandemic. I have this right under the Centers for\n              Disease Control and Prevention's (\"CDC\") Order effective September 4, 2020. The CDC issued this\n              Order as an emergency action authorized by Section 361 of the Public Health Act and 42 CFR 70.2\n              to prevent the spread of COVID-19 throughout the United States, including Nebraska.\n            </Text>\n          </View>\n          <View style={styles.section}>\n            <Text>\n              The CDC Order states that “a landlord, owner of residential property, or other person with a\n              legal right to pursue eviction or possessory action, shall not evict any covered person from any\n              residential property in any jurisdiction to which this Order applies.” I am a “covered person”\n              pursuant to this Order and request that you or your agent stop any action to remove or cause the\n              removal of myself or my family from the leased property. This Order and its prohibitions apply\n              to any stage of the eviction process, including but not limited to: you sending a notice to\n              vacate, making an initial court filing, or pursuing execution of a post-judgment possessory\n              action.\n            </Text>\n          </View>\n          <View style={styles.section}>\n            <Text>\n              Please note that pursuant to 18 U.S.C. 3559, 3571; 42 U.SC. 271; and 42 CFR 70.18, a person\n              violating this Order may be subject to a fine of up to $250,000, a year and jail, or both\n              depending on the circumstances. The U.S. Department of Justice may initiate court proceedings as\n              appropriate seeking imposition of these criminal penalties. For further information you may\n              contact the CDC directly at 404-639-7000 or cdcregulations@cdc.gov.\n            </Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Regards,</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>{personalInfoBlock}</Text>\n          </View>\n          <View style={styles.footnote}>\n            <Text>1 Center for Disease Control and Prevention's Order dated September 1, 2020. See: https://www.cdc.gov/coronavirus/2019-ncov/covid-eviction-declaration.html; see also https://www.federalregister.gov/documents/2020/09/04/2020-19654/temporary-halt-in-residential-evictions-to-prevent-the-further-spread-of-covid-19</Text>\n          </View>\n        </Page>\n        <Page size=\"Letter\" style={styles.page}>\n          <View style={styles.image}>\n            <Image src=\"/renters-help/declaration-form-page-1.png\"/>\n          </View>\n        </Page>\n        <Page size=\"Letter\" style={styles.page}>\n          <View style={styles.image}>\n            <Image src=\"/renters-help/declaration-form-page-2.png\"/>\n          </View>\n          <View style={styles.signature}>\n            <Image src={imageUrl} style={{height: 50, width: 200}}/>\n          </View>\n          <View style={styles.date}>\n            <Text>\n              {new Date().toLocaleDateString()}\n            </Text>\n          </View>\n        </Page>\n      </Document>\n  );\n}\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport StepButtons from \"../StepButtons\";\nimport {Link} from \"@material-ui/core\";\nimport * as ReactGA from \"react-ga\";\nimport { useTranslation } from 'react-i18next';\n\nexport default function FailedQualification({state, setState}) {\n    const {t} = useTranslation();\n    const { currentStep, formNumber } = state;\n    useEffect(() => ReactGA.pageview(`failed qualification on step: ${currentStep} and form: ${formNumber}`), [currentStep, formNumber]);\n    if (state.currentStep >= 0) {\n        return null\n    }\n    return (\n        <>\n            <Typography variant='h4' component='h1' className='title'>\n                {t('failedQualificationTitle')}\n            </Typography>\n            <Typography variant='body1'>\n                {t('failedQualificationBody')}\n            </Typography>\n            <List>\n                <ListItem>\n                    <Link style={{cursor:'pointer'}} color={'primary'} href='https://www.legalaidofnebraska.org/'>{t('legalAidOfNebraska')}</Link>\n                </ListItem>\n            </List>\n            <StepButtons state={state} setState={setState}/>\n        </>)\n}\n\nFailedQualification.propTypes = {\n    state: PropTypes.shape({currentStep: PropTypes.number, formNumber: PropTypes.number})\n}\n","import React, {useState} from 'react';\nimport Start from \"./steps/qualification/Start\";\nimport Home from \"./Home\";\nimport IncomeQualifications from \"./steps/qualification/IncomeQualifications\";\nimport GovernmentHelp from \"./steps/qualification/GovernmentHelp\";\nimport AffordRent from \"./steps/qualification/AffordRent\";\nimport StepCounter from \"./steps/StepCounter\";\nimport UnsafeLivingConditions from \"./steps/qualification/UnsafeLivingConditions\";\nimport AttemptingToPay from \"./steps/qualification/AttemptingToPay\";\nimport Qualified from \"./steps/qualification/Qualified\";\nimport PersonalInformation from \"./steps/letter-builder/PersonalInformation\";\nimport LandlordInfo from \"./steps/letter-builder/LandlordInfo\";\nimport PreviewLetter from \"./steps/letter-builder/PreviewLetter\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FailedQualification from \"./steps/no-qualify/FailedQualification\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport {createMuiTheme} from \"@material-ui/core\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport FlexContainer from \"./FlexContainer\";\n\nexport default function FormContainer() {\n  const [state, setState] = useState({\n    currentStep: 0,\n    formNumber: 0,\n  });\n  const [renterInfo, setRenterInfo] = useState({\n    firstName: '',\n    lastName: '',\n    address: '',\n    unit: '',\n    city: '',\n    state: 'Nebraska',\n    zip: '',\n  });\n  const [landlordInfo, setLandlordInfo] = useState({landlordCompany: '', landlordFullName: ''});\n  const theme = createMuiTheme({palette: {primary: {main: '#DC2A44'}}})\n  const {currentStep, formNumber} = state;\n  return (\n      <ThemeProvider theme={theme}>\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <Link component={\"a\"} href={process.env.PUBLIC_URL} style={{textDecoration: \"none\", color: \"white\", verticalAlign: \"middle\"}}>\n              <FlexContainer>\n                <img src={`${process.env.PUBLIC_URL}/neb-renter-help-favicon-red.png`} alt=\"logo\" style={{marginRight: 10}} width={30} height={30}/>\n                <Typography variant=\"h6\" component={\"span\"} noWrap>Nebraska Renters Help</Typography>\n              </FlexContainer>\n            </Link>\n          </Toolbar>\n        </AppBar>\n        {formNumber === 0 ? <Home state={state} setState={setState}/> :\n            <Box mt={10}>\n              <Container maxWidth={'md'}>\n                <Paper elevation={3}>\n                  <Box display={'flex'} flexDirection={'column'} p={1} m={3}>\n                    <StepCounter formNumber={formNumber} currentStep={currentStep}/>\n\n                    {formNumber === 1 &&\n                    <form>\n                      <Start state={state} setState={setState}/>\n                      <IncomeQualifications state={state} setState={setState}/>\n                      <GovernmentHelp state={state} setState={setState}/>\n                      <AffordRent state={state} setState={setState}/>\n                      <UnsafeLivingConditions state={state} setState={setState}/>\n                      <AttemptingToPay state={state} setState={setState}/>\n                      <Qualified state={state} setState={setState}/>\n                    </form>\n                    }\n\n                    {formNumber === 2 &&\n                    <form>\n                      <PersonalInformation state={state} setState={setState} renterInfo={renterInfo} setRenterInfo={setRenterInfo}/>\n                      <LandlordInfo state={state} setState={setState} landlordInfo={landlordInfo} setLandlordInfo={setLandlordInfo}/>\n                      <PreviewLetter state={state} setState={setState} renterInfo={renterInfo} landlordInfo={landlordInfo}/>\n                    </form>\n                    }\n                    {currentStep < 0 &&\n                    <div>\n                      <FailedQualification state={state} setState={setState}/>\n                    </div>\n                    }\n                  </Box>\n                </Paper>\n              </Container>\n            </Box>\n        }\n      </ThemeProvider>\n  )\n}\n","import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport en from './translations/en';\nimport es from './translations/es';\n\nconst resources = {en, es};\n\ni18n\n    .use(LanguageDetector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        keySeparator: false,\n        interpolation: {\n            escapeValue: false\n        },\n        fallbackLng: 'en',\n        detection: {\n            order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n            lookupQuerystring: 'lng',\n            lookupCookie: 'i18next',\n            lookupLocalStorage: 'i18nextLng',\n            lookupSessionStorage: 'i18nextLng',\n            lookupFromPathIndex: 0,\n            lookupFromSubdomainIndex: 0,\n        },\n    });\n\nexport default i18n;","const translations = {\n    translation: {\n        checkAllThatApply: 'Check all that apply',\n        clear: 'Clear',\n        close: 'Close',\n        download: 'Download',\n        next: 'Next',\n        no: 'No',\n        noneOfTheAbove: 'None of the above',\n        of: 'of',\n        previous: 'Previous',\n        qualification: 'Qualification',\n        save: 'Save',\n        signForm: 'Sign Form',\n        step: 'Step',\n        yes: 'Yes',\n        affordRentTitle: 'Can you afford your rent?',\n        affordRentOptionLostSubstantialIncome: 'My household lost substantial income',\n        affordRentOptionLostJob: 'I lost my job',\n        affordRentOptionHoursCut: 'My hours were cut',\n        affordRentOptionSalaryReduced: 'My salary was reduced',\n        affordRentOptionExtraordinaryMedicalCost: 'I have extraordinary medical costs that I pay out of pocket that insurance does not cover',\n        affordRentExtraordinaryExplained: 'An \"extraordinary\" medical expense is any un-reimbursed medical expense likely to exceed ' +\n            '7.5% of one’s adjusted gross income for the year.',\n        affordRentExtraordinaryQuestion: 'What are \"extraordinary medical costs\"?',\n        attemptingToPayTitle: 'I am doing my best to pay as much rent as I can, given my circumstances',\n        douglasCountyCaresAct: 'Apply for the Douglas County CARES Act by December 13th',\n        failedQualificationTitle: 'Sorry, it looks like you don\\'t qualify',\n        failedQualificationBody: 'If the answers you gave indicate you don\\'t qualify, you can restart but please proceed with caution and ' +\n            'remember that you must answer these questions truthfully. You could be subject to civil or criminal ' +\n            'penalties if you lie on these forms. If you are in need of legal help, please see the resources provided ' +\n            'by a legal aid organization: ',\n        governmentHelpTitle: 'Did you do your best to get government help to pay the rent?',\n        governmentHelpBody: 'If you do not qualify for any help from the government, or if applications were closed, your application ' +\n            'was wait-listed, or assistance programs were no longer available or if you applied and you were denied, ' +\n            'answer ‘Yes’.',\n        governmentHelpBestEffortsQuestion: 'What are \"best efforts\" and \"government help\"?',\n        governmentHelpBestEffortsExplanation: '\"Government help\" means any governmental rental or housing payment benefits available to the individual ' +\n            'or any household member. \"Best efforts\" is not defined by the Order. You should document whether your any applications were successful.',\n        homeAboutHeader: 'About Nebraska Renters Help',\n        homeAboutInfo: 'Nebraska Renters Help was built by Code for Nebraska. ' +\n            'The purpose of the site is to provide self-help tools and resources so struggling ' +\n            'Nebraska renters can obtain entitled protection under the current ' +\n            'CDC Federal Eviction Moratorium. The information in Nebraska Renters Help does not constitute legal ' +\n            'advice and must not be used as a substitute for the advice of a lawyer qualified to give advice ' +\n            'on legal issues pertaining to housing. We can help direct you to free legal services if ' +\n            'necessary.',\n        homeContactLegalAid: 'Please call <1>Legal Aid</1> toll-free at 1-844-268-5627',\n        homeInstruction1Title: 'Fill out the form in 5 minutes',\n        homeInstruction1Info: 'Answer a few questions and provide your<1/>landlord\\'s contact information',\n        homeInstruction2Title: 'The tool will create a letter',\n        homeInstruction2Info: 'The app will create a letter that is ready<1/>to send based on your answers',\n        homeInstruction3Title: 'Send the letter to your landlord',\n        homeInstruction3Info: 'Download or print the letter to<1/>send to your landlord',\n        homeLanguagePreference: 'Prefiere Español?',\n        homeOtherRentalAssistance: 'Other Rental Assistance',\n        homePageTitle: 'Are you facing an <1>eviction</1>? This tool can help.',\n        homeReasonToUse: \"If you're having trouble keeping up with your rent payments, the Federal Government has issued an \" +\n            \"order that prevents \" +\n            \"landlords in the US from evicting many of their tenants until after January 31, 2021. Use this \" +\n            \"tool to see if you are covered, \" +\n            \"and to produce the right letter (called a \\\"Declaration\\\") to send to your landlord, as required \" +\n            \"by the order.\",\n        homeStartButton: 'Start Free Tool',\n        incomeQualificationsTitle: 'Income Qualification',\n        incomeQualificationsOptionNoIncome: 'I did not report any income to the I.R.S. for 2019',\n        incomeQualificationsOptionStimulusCheck: 'I got a stimulus check (Economic Impact Payment) in 2020',\n        incomeQualificationsOptionUnderIncomeThreshold: 'I either expect to earn no more than $99,000 in annual income for calendar year 2020 or no more than $198,000 if filing a joint tax return',\n        landlordCompany: 'Company',\n        landlordFullName: 'Full name',\n        landlordInfoTitle: 'Enter your landlord\\'s information',\n        landlordInfoBody: 'This information will determine where your letter is sent. You can send this information to go ' +\n            'to your landlord, the owner of the property where you live, or another person who has the right ' +\n            'to have you evicted or removed from where you live. If you are unsure where to send this notice, ' +\n            'please look at your lease or ask your landlord where you may send a legal notice.',\n        legalAidOfNebraska: 'Legal Aid of Nebraska',\n        personalInformationTitle: 'Enter your information',\n        personalInformationBody: 'We need this information to complete a cover letter to your landlord as well as to ensure that you qualify to use this self-help tool.',\n        personalInformationFirstName: 'First Name',\n        personalInformationLastName: 'Last Name',\n        personalInformationAddress: 'Current Address',\n        personalInformationUnit: 'Unit (optional)',\n        personalInformationCity: 'City',\n        personalInformationState: 'State',\n        personalInformationZip: 'Zip',\n        previewTitle: 'Preview your ready-to-send letter',\n        previewBody: 'We created a form with all your information, please check and make sure it looks correct.',\n        qualifiedTitle: 'Great, you qualify! Read the following information carefully.',\n        qualifiedBodyAgreeingDescription: 'When you sign the Declaration form, you are agreeing that you understand the following sentences and ' +\n            'that they are true:',\n        qualifiedBodyProtected: 'Even though I am protected from eviction through December 31, 2020,',\n        qualifiedBodyAgreeingStillResponsible: 'I still am responsible to pay my rent and follow all other rules of my lease. My landlord may charge me fees or interest.',\n        qualifiedBodyAgreeingPayInFullAfterDate: 'After December 31, 2020, I may be required to pay all of the rent due, in full.',\n        qualifiedBodyAgreeingTellTheTruth: 'I need to tell the truth on this form. If I do not, I may face civil or criminal penalties.',\n        qualifiedBodyConfirmUnderstanding: 'I Understand',\n        startTitle: 'How to stay in your home',\n        startDescription: 'The federal government has banned landlords from evicting qualifying tenants for non-payment of ' +\n            'rent due to the COVID-19 public health crisis. In order to protect yourself you need to:',\n        startFirstStep: 'Make sure you qualify (there are 5 question we will ask you).',\n        startSecondStep: 'Fill out your address and your landlord\\'s information.',\n        startThirdStep: 'Send the letter to your landlord (we can help you with that).',\n        unsafeLivingTitle: 'Would an eviction result in a health risk to you by placing you in unsafe living conditions?',\n        unsafeLivingOptionLikelyBecomeHomeless:'I am likely to become homeless',\n        unsafeLivingOptionMoveToShelter:'I will probably need to move into a homeless shelter',\n        unsafeLivingOptionMoveToCloseQuarters:'I will probably need to move in with someone else in close quarters',\n        unsafeLivingOptionNoOtherSafeChoices:'I do not have any other safe housing choices',\n        unsafeLivingOptionOtherChoicesMoreExpensive:'Any other safe housing choices would cost me more money',\n        unsafeLivingOptionNotAtRisk:'I am not at risk of unsafe housing',\n    }\n}\n\nexport default translations;\n","const translations = {\n    translation: {\n        checkAllThatApply: 'Elige todo lo que es verdad para usted',\n        clear: 'Limpiar',\n        close: 'Cerrar',\n        download: 'Descargar',\n        next: 'Siguiente',\n        no: 'No',\n        noneOfTheAbove: 'Ninguno de estos se aplica a mí',\n        of: 'de',\n        previous: 'Página anterior',\n        qualification: 'Pregunta de calificación',\n        save: 'Guardar',\n        signForm: 'Firma el formulario',\n        step: 'Paso',\n        yes: 'Si',\n        affordRentTitle: '¿Puede pagar su alquiler?',\n        affordRentOptionLostSubstantialIncome: 'Mi familia perdió ingresos sustanciales',\n        affordRentOptionLostJob: 'Perdí mi trabajo',\n        affordRentOptionHoursCut: 'Se redujeron mis horas del trabajo',\n        affordRentOptionSalaryReduced: 'Se redujeron mi salario',\n        affordRentOptionExtraordinaryMedicalCost: 'Tengo que pagar gastos médicos extraordinarios que NO son cubiertos por mi seguro de salud',\n        affordRentExtraordinaryExplained: 'Un gasto médico \"extraordinario\" es cualquier gasto médico no reembolsado que exceda el 7.5% del ingreso bruto ajustado de una persona ese año.',\n        affordRentExtraordinaryQuestion: '¿Qué significa \"gastos médicos extraordinarios\"?',\n        attemptingToPayTitle: 'Estoy haciendo todo lo posible para realizar pagos parciales a tiempo como lo permitan mis circunstancias',\n        douglasCountyCaresAct: 'Se debe enviar su aplicación antes del 13 de diciembre de 2020',\n        failedQualificationTitle: 'Lo sentimos. Parece que no califica.',\n        failedQualificationBody: 'Si sus respuestas indican que no califica, se puede reiniciar, pero proceda con precaución y recuerde que tiene que responder honestamente a las preguntas. Usted podría estar sujeto a sanciones civiles o penales si mienta en estos formularios. Si necesita servicios legales, se puede solicitar ayuda gratis de Legal Aid:',\n        governmentHelpTitle: '¿Hizo todo lo posible para obtener cualquier asistencia gubernamental que haya disponible para pagar el alquiler?',\n        governmentHelpBody: 'Elige \\'Si\\' en caso de que: o usted no calificó para obtener ninguna forma de asistencia del gobierno; o las aplicaciones ya habían cerrado; o su aplicación recibió un estado de lista de espera (\"wait list\"); o envió una aplicación y fue denegada.',\n        governmentHelpBestEffortsQuestion: '¿Qué significan \"mejores esfuerzos\" y \"asistencia gubernamental\"?',\n        governmentHelpBestEffortsExplanation: '\"Asistencia gubernamental\" se refiere a cualquier programa gubernamental de beneficios para pagar el alquiler (la/s programa/s que son disponibles a cualquier miembro de la familia). \"Mejores esfuerzos\" no es definido por el orden de los Centros para el Control y la Prevención de Enfermedades (CDC). Se recomienda quedar documentación sobre sus aplicaciones para asistencia.',\n        homeAboutHeader: 'Sobre la herramienta \"Nebraska Renters Help\"',\n        homeAboutInfo: 'Nebraska Renters Help (Ayuda para inquilinos en Nebraska) fue construido por el grupo Code for Nebraska. Este sitio web fue creado para que los inquilinos puedan obtener las protecciones  otorgadas a ellos debajo de la moratoria de desalojos del gobierno federal de los Estados Unidos. La información contenida en este sitio no es consejo legal. Nebraska Renters Help no es un sustituto para los servicios de un abogado calificado para dar consejos legales sobre la ley de propietarios e inquilinos (Landlord-Tenant Law). Podemos ayudarle a encontrar servicios legales sin costo si es necesario.',\n        homeContactLegalAid: 'PSe puede llamar gratis a <1>Legal Aid</1> al 1-844-268-5627',\n        homeInstruction1Title: 'Complete un formulario dentro de 5 minutos',\n        homeInstruction1Info: 'Responda a algunas preguntas y ingrese la<1/> información de contacto del propietario',\n        homeInstruction2Title: 'Esta herramienta creará una carta',\n        homeInstruction2Info: 'Según sus respuestas a las preguntas, la herramienta<1/>va a crear una carta que estará lista a enviar',\n        homeInstruction3Title: 'Envíe la carta a su arrendador',\n        homeInstruction3Info: 'Descargue o imprima la carta<1/>para enviarla al propietario',\n        homeLanguagePreference: 'Prefer English?',\n        homeOtherRentalAssistance: 'Más asistencia para inquilinos',\n        homePageTitle: '¿Tiene usted un aviso de <1>desalojo</1>? Esta herramienta le puede ayudar.',\n        homeReasonToUse: \"Si tiene problemas con pagar el alquiler, el gobierno federal de los Estados Unidos anunció una moratoria nacional de desalojos para prácticamente todos los inquilinos en EE.UU. (quienes son afectados por la pandemia de COVID-19) hasta el día 31 de enero de 2021. Utilice esta herramienta para ver si usted califica y para producir el formulario adecuado (llamada “Declaración”) para enviar a su arrendador/propietario, como es requerido por el orden del gobierno.\",\n        homeStartButton: 'Empieza Herramienta Gratis',\n        incomeQualificationsTitle: 'Calificación de ingreso',\n        incomeQualificationsOptionNoIncome: 'No tuve que presentar una declaración de impuestos para 2019 al Servicio de Impuestos Internos (IRS) de los estados unidos ' +\n            '(I did not have to submit a tax return for 2019 to the IRS)',\n        incomeQualificationsOptionStimulusCheck: 'Recibí un Pago de Impacto (cheque de estímulo, o “Economic Impact Payment”) en 2020.',\n        incomeQualificationsOptionUnderIncomeThreshold: 'Espero no ganar más de $99,000 en ingresos anuales para el año 2020 (o no más de $198,000 si presento una declaración de impuestos conjunta)',\n        landlordCompany: 'Empresa del propietario',\n        landlordFullName: 'Nombre completo',\n        landlordInfoTitle: 'Ingrese el información del propietario',\n        landlordInfoBody: 'Esta información determinará a dónde se debe enviar la carta. Usted puede enviar la carta a su arrendador/propietario, al dueño de la casa donde vive u otra persona que tenga derecho a pedir su desalojamiento. Si no sabe dónde enviar este aviso, consulte su contrato de arrendamiento o pregunte al propietario dónde puede enviar un aviso legal.',\n        legalAidOfNebraska: 'Asistencia Legal de Nebraska (Legal Aid of Nebraska)',\n        personalInformationTitle: 'Ingrese su información',\n        personalInformationBody: 'Necesitamos esta información para completar una carta al dueño de su casa, además de asegurarnos de que usted califica para usar esta herramienta de autoayuda.',\n        personalInformationFirstName: 'Primer nombre',\n        personalInformationLastName: 'Apellido(s)',\n        personalInformationAddress: 'Dirección actual',\n        personalInformationUnit: 'Número de apartamento (opcional)',\n        personalInformationCity: 'Ciudad',\n        personalInformationState: 'Estado',\n        personalInformationZip: 'Código postal',\n        previewTitle: 'Revisa su carta',\n        previewBody: 'Hemos creado una carta con toda su información. Favor de averiguar que todo parezca bien.',\n        qualifiedTitle: 'Si, usted califica. Lea atentamente la siguiente información.',\n        qualifiedBodyAgreeingDescription: 'Cuando usted firma el formulario de Declaración, acepta que comprende las siguientes oraciones y que son verdaderas:',\n        qualifiedBodyProtected: 'Aunque esté protegido/a/x contra el desalojamiento hasta el 31 de diciembre de 2020,',\n        qualifiedBodyAgreeingStillResponsible: 'Todavía soy responsable de pagar el alquiler y seguir todas las reglas de mi contrato de arrendamiento. El propietario me puede cobrar tarifas o intereses.',\n        qualifiedBodyAgreeingPayInFullAfterDate: 'Después del día 31 de diciembre de 2020, es posible que tenga que pagar todo el alquiler adeudado.',\n        qualifiedBodyAgreeingTellTheTruth: 'Necesito decir la verdad en este formulario. Si no lo hago, es posible que yo enfrente sanciones civiles o penales.',\n        qualifiedBodyConfirmUnderstanding: 'Yo entiendo',\n        startTitle: '¿Cómo puedo quedarme en mi casa?',\n        startDescription: 'El gobierno federal de los estados unidos ha prohibido el desalojamiento de inquilinos calificados por impago del alquiler debido a la pandemia de COVID-19. Este sitio web le ayudará a:',\n        startFirstStep: 'Averiguar si usted es un inquilino/a/x calificado/a/x (5 preguntas)..',\n        startSecondStep: 'Proporcionar su dirección y la información de contacto del dueño.',\n        startThirdStep: 'Enviar la carta al dueño de su edificio.',\n        unsafeLivingTitle: 'Para usted, ¿un desalojo resultaría en un riesgo para su salud o condiciones inseguros?',\n        unsafeLivingOptionLikelyBecomeHomeless: 'Es muy probable que me quedaría sin hogar',\n        unsafeLivingOptionMoveToShelter: 'Necesitaría mudarme a un refugio para personas sin hogar',\n        unsafeLivingOptionMoveToCloseQuarters: 'Necesitaría mudarme a una residencia compartida por otras personas en ambientes reducido',\n        unsafeLivingOptionNoOtherSafeChoices: 'No tengo más opciones para quedarme en una vivienda segura y sana',\n        unsafeLivingOptionOtherChoicesMoreExpensive: 'Cualquier otra opción de vivienda segura me costaría más dinero',\n        unsafeLivingOptionNotAtRisk: 'I am not at risk of unsafe housing',\n    }\n}\n\nexport default translations;\n","import '../App.css';\nimport FormContainer from \"./FormContainer\";\nimport React from \"react\";\nimport ReactGA from 'react-ga';\nimport '../i18n';\n\nReactGA.initialize('UA-175185008-2');\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <FormContainer/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}